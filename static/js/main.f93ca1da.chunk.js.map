{"version":3,"sources":["components/Game.jsx","components/Selection.jsx","App.js","reportWebVitals.js","index.js"],"names":["Game","props","matrix","i","j","x","y","content","useState","grid","setGrid","turn","setTurn","reset","setReset","winer","setWiner","surround","cell","copy","lines","length","a","b","c","useEffect","alert","ban","players","className","map","row","col","onClick","handleReset","Selection","setPlayers","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f93ca1da.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/game.css';\r\n\r\nfunction Game(props) {\r\n  let matrix = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    matrix[i] = [];\r\n    for (var j = 0; j < 3; j++) {\r\n      matrix[i][j] = {\r\n        x: i,\r\n        y: j,\r\n        content: 0,\r\n      };\r\n    }\r\n  }\r\n  const [grid, setGrid] = useState(matrix);\r\n  const [turn, setTurn] = useState(true);\r\n  const [reset, setReset] = useState(false);\r\n  const [winer, setWiner] = useState(0);\r\n\r\n  const handleRigthClick = (cell) => {\r\n    if (cell.content === 0 && !reset) {\r\n      setGrid(surround(cell, [...grid]));\r\n      setTurn(!turn);\r\n    }\r\n  };\r\n  const surround = (cell, copy) => {\r\n    const lines = [\r\n      [\r\n        [0, 0],\r\n        [1, 1],\r\n        [2, 2],\r\n      ],\r\n      [\r\n        [0, 2],\r\n        [1, 1],\r\n        [2, 0],\r\n      ],\r\n      [\r\n        [0, 0],\r\n        [1, 0],\r\n        [2, 0],\r\n      ],\r\n      [\r\n        [0, 1],\r\n        [1, 1],\r\n        [2, 1],\r\n      ],\r\n      [\r\n        [0, 2],\r\n        [1, 2],\r\n        [2, 2],\r\n      ],\r\n      [\r\n        [0, 0],\r\n        [0, 1],\r\n        [0, 2],\r\n      ],\r\n      [\r\n        [1, 0],\r\n        [1, 1],\r\n        [1, 2],\r\n      ],\r\n      [\r\n        [2, 0],\r\n        [2, 1],\r\n        [2, 2],\r\n      ],\r\n    ];\r\n    copy[cell.x][cell.y].content = turn ? 'X' : '◯';\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (\r\n        copy[a[0]][a[1]].content &&\r\n        copy[a[0]][a[1]].content === copy[b[0]][b[1]].content &&\r\n        copy[a[0]][a[1]].content === copy[c[0]][c[1]].content\r\n      ) {\r\n        setWiner(turn ? 'X' : '◯');\r\n        setReset(true);\r\n      }\r\n    }\r\n    return copy;\r\n  };\r\n\r\n  const handleReset = () => {\r\n    let matrix = [];\r\n    for (var i = 0; i < 3; i++) {\r\n      matrix[i] = [];\r\n      for (var j = 0; j < 3; j++) {\r\n        matrix[i][j] = {\r\n          x: i,\r\n          y: j,\r\n          content: 0,\r\n        };\r\n      }\r\n    }\r\n    setGrid(matrix);\r\n    setTurn(true);\r\n    setReset(false);\r\n    setWiner(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!reset) {\r\n      let ban = true;\r\n      for (var i = 0; i < 3; i++)\r\n        for (var j = 0; j < 3; j++) if (grid[i][j].content === 0) ban = false;\r\n      if (ban) {\r\n        alert('It´s a tie');\r\n        setReset(true);\r\n      }\r\n    } else if (winer !== 0) {\r\n      alert((turn ? '◯' : 'X') + ' Win');\r\n    }\r\n  }, [grid, reset, winer, turn]);\r\n\r\n  if (props.players === 1) {\r\n    return <div>En proceso</div>;\r\n  }\r\n  if (props.players === 2) {\r\n    return (\r\n      <div className='grid'>\r\n        {grid.map((row, i) => (\r\n          <div key={i}>\r\n            {row.map((col, j) => (\r\n              <div key={j} className='d-inline-flex'>\r\n                <div\r\n                  className='border border-dark'\r\n                  onClick={() => {\r\n                    handleRigthClick(col);\r\n                  }}\r\n                >\r\n                  <p\r\n                    className={\r\n                      col.content === 'X'\r\n                        ? 'eq text-center'\r\n                        : col.content === '◯'\r\n                        ? 'ou text-center'\r\n                        : 'text-center'\r\n                    }\r\n                  >\r\n                    {col.content === 0 ? '‎‎‏‏‎ ‎' : col.content}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n\r\n        {reset ? (\r\n          <button\r\n            className='btn btn-primary reset'\r\n            onClick={() => handleReset()}\r\n          >\r\n            Reset\r\n          </button>\r\n        ) : (\r\n          <h2 className='turn'>\r\n            Turn of\r\n            <span className={turn ? 'eq' : 'ou'}> {turn ? 'X' : '◯'}</span>\r\n          </h2>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport '../styles/selection.css';\r\n\r\nconst Selection = (props) => {\r\n  return (\r\n    <div className='selection container'>\r\n      <header>\r\n        <h1 className='text-center'>tic-tac-toe on React</h1>\r\n      </header>\r\n      <section>\r\n        <h3 className='text-center par'>Choose the number of players</h3>\r\n        <div className='center'>\r\n          <button\r\n            className='btn btn-primary disabled'\r\n            onClick={() => props.setPlayers(1)}\r\n          >\r\n            1\r\n          </button>\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={() => props.setPlayers(2)}\r\n          >\r\n            2\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Selection;\r\n","import React, { useState } from 'react';\nimport Game from './components/Game';\nimport Selection from './components/Selection';\n\nfunction App() {\n  const [players, setPlayers] = useState(0);\n  return (\n    <div className='container'>\n      {players === 0 ? (\n        <Selection setPlayers={setPlayers} />\n      ) : (\n        <Game players={players} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}